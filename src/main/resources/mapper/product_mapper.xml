<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ProductMapper">
	
	<insert id="insert" parameterType="ProductVO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO product 
		(title, capacity, model, description,prdtCompany,
		prdtDate,usingPeriod,count, writer) 
		VALUES 
		(
			#{title, jdbcType=VARCHAR}, 
			#{capacity, jdbcType=INTEGER}, 
			#{model, jdbcType=VARCHAR},
			#{description, jdbcType=VARCHAR},
			#{prdtCompany, jdbcType=VARCHAR},
			#{prdtDate, jdbcType=VARCHAR},
			#{usingPeriod, jdbcType=VARCHAR},
			#{count, jdbcType=INTEGER},
			#{writer, jdbcType=INTEGER}
		)
	</insert>
	
	<select id="selectAll" resultType="ProductVO">
		SELECT
			p.*,
			u.id AS writer,
			u.name AS writerName
		FROM 
		product p 
			LEFT JOIN users u on (p.writer = u.id)
	</select>
	
	<update id="update" parameterType="ProductVO">
		UPDATE product
		<trim prefix="SET" suffixOverrides=",">
			title = #{title},
			capacity = #{capacity},
			model = #{model},
			description = #{description},
			prdtCompany = #{prdtCompany},
			prdtDate = #{prdtDate},
			usingPeriod = #{usingPeriod},
			count = #{count},
			writer = #{writer},
			<if test="certificationId > 0">
				certificationId = #{certificationId},
			</if>
		</trim>
		<where>
		id = ${id}
		</where>
	</update>
	
	<insert id="insertPhotos" parameterType="java.util.List">
		INSERT into ProductPhotos
		(
			productId, 
			photoId
		)
		VALUES
		<foreach collection="list" item="elem" open="(" separator="),(" close=")">
			#{elem.productId}, 
			#{elem.photoId}
		</foreach>
	</insert>
	
	<select id="select" resultType="ProductVO" parameterType="ProductVO">
		SELECT
			p.*,
			u.id AS writer,
			u.name AS writerName
		FROM 
			product p 
			LEFT JOIN users u on (p.writer = u.id)
		<where>
			<if test="@com.example.demo.util.CommonUtil@notEmpty(query)">
				title like '%${query}%'
				or
				model like '%${query}%'
			</if>
		</where>
		order by id desc
		LIMIT ${from}, ${pageSize}
	</select>
	
	<select id="selectOne" resultType="ProductVO" parameterType="ProductVO">
		SELECT
			p.*,
			u.id AS writer,
			u.name AS writerName
		FROM 
			product p 
			LEFT JOIN users u on (p.writer = u.id)
		<where>
			p.id = #{id}
		</where>
	</select>
	
	<select id="totalCount" resultType="ProductVO">
		SELECT id
		FROM
		product
	</select>
	
	<delete id="deletePhotos" parameterType="java.util.List">
		DELETE FROM ProductPhotos
		<where>
			id IN (
				SELECT id FROM ProductPhotos
				WHERE
				 	productId IN
					<foreach collection="list" item="elem" separator="," open="(" close=")">
						${elem.productId}	
					</foreach>
					and 
					photoId IN
					<foreach collection="list" item="elem" separator="," open="(" close=")">
						${elem.photoId}	
					</foreach>
			)
		</where>
	</delete>
	
	<select id="selectPhotos" parameterType="ProductVO" resultType="PhotoInfo">
		SELECT p.*
		FROM ProductPhotos a
			LEFT JOIN PhotoInfo p on (a.photoId = p.id)
		<where>
			a.productId = ${id}
		</where>
		ORDER BY p.id
	</select>
	
	<delete id="delete" parameterType="ProductVO">
	DELETE FROM product
	<where>
		id = #{id}
	</where>
	</delete>
	
</mapper>
